@page "/products"
@using BlazorApp.Data
@inject ProductService ProductService
@inject NavigationManager Navigation

<h3>Danh sách sản phẩm</h3>

<button class="btn btn-success mb-3" @onclick="NavigateToCreate">Tạo sản phẩm</button>

<table class="table table-bordered">
    <thead>
        <tr>
            <th>ID</th>
            <th>Tên sản phẩm</th>
            <th>Giá</th>
            <th>Số lượng</th>
            <th>Nhà xuất bản</th>
            <th>Thể loại</th>
            <th>Ngày xuất bản</th>
            <th>Tình trạng</th>
            <th>Hành động</th>
        </tr>
    </thead>
    <tbody>
        @if (products == null)
        {
            <tr>
                <td colspan="10" class="text-center">Đang tải dữ liệu...</td>
            </tr>
        }
        else if (!products.Any())
        {
            <tr>
                <td colspan="10" class="text-center">Không có sản phẩm nào.</td>
            </tr>
        }
        else
        {
            @foreach (var product in products)
            {
                <tr>
                    <td>@product.Id</td>
                    <td>@product.Name</td>
                    <td>@product.Price.ToString("C")</td>
                    <td>@product.Soluong</td>
                    <td>@product.Nxb</td>
                    <td>@product.Theloai</td>
                    <td>@product.Ngayxb</td>
                    <td>@product.Tinhtrang</td> <!-- Displaying the product status -->
                    <td>
                        <button class="btn btn-info" @onclick="() => NavigateToEdit(product.Id)">Sửa</button>
                        <button class="btn btn-danger" @onclick="() => DeleteProduct(product.Id)">Xóa</button>
                    </td>
                </tr>
            }
        }
    </tbody>
</table>

@code {
    private List<Product> products = new();

    protected override async Task OnInitializedAsync()
    {
        products = await ProductService.GetProductsAsync();
    }

    private async Task DeleteProduct(int id)
    {
        await ProductService.DeleteProductAsync(id);
        products = await ProductService.GetProductsAsync(); // Refresh the product list
        StateHasChanged();
    }

    private void NavigateToCreate()
    {
        Navigation.NavigateTo("/product/create");
    }

    private void NavigateToEdit(int productId)
    {
        Navigation.NavigateTo($"/product/edit/{productId}");
    }
}
